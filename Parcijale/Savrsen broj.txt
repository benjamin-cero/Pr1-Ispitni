#include"iostream"
using namespace std;

/*Zadatak 1:

Napišite program u kojem korisnik unosi broj koji mora da zadovolji pravilo: (0 ≤ n ≤ 10 000). 
Nakon što korisnik unese broj, potrebno je u intervalu od [2, n] ispisati sve savršene brojeve.
Savršeni broj jeste onaj cijeli broj koji je jednak zbroju svojih djelitelja,
uključujući i jedinicu, ali ne i samog sebe. Primjer savršenog broja jeste:

Copy code
6 = 1 + 2 + 3  
ili  
28 = 1 + 2 + 4 + 7 + 14  
Nakon što ispišete sve savršene brojeve u intervalu [2, n], 
potrebno je da pronađete djelitelj najvećeg pronađenog savršenog broja.
Ako niste uspjeli pronaći nijedan savršen broj u zadanom intervalu, ispišite odgovarajuću poruku.

Po mogućnosti možete koristiti funkcije sa sljedećim prototipom:

Funkcija	           Ulazi	                        Izlaz	  Definicija
isPerfectNumber	       num: int                         bool	  Provjerava da li je vrijednost num savršeni broj.
listPerfectNumbers	   num: int, lastPerfect: int       void	  Ispisuje interval savršenih brojeva i spašava vrijednost posljednjeg savršenog broja u intervalu.
biggestDivisor	       num: int	                        int	      Pronalazi i vraća najvećeg djelitelja posljednjeg savršenog broja u nizu.

Upotreba gore navedenih funkcija nije obavezna.*/



bool isPerfectNumber(int n) {
	int sum = 0;
	for (int i = 1; i < n; i++)
	{
		if (n % i == 0) {
			sum += i;
		}
	}
	if (sum == n) {
		return true;
	}
	return false;

}
void listPerfectNumbers(int n, int& zadnjiSavrsen) {
	bool provjera = false;
	for (int i = 2; i <= n; i++)
	{
		if (isPerfectNumber(i) == true) {
			cout << "Savrsen broj: " << i << endl;
			provjera = true;
			zadnjiSavrsen = i;
		}
	}
	if (provjera == false) {
		cout << "U intervalu od 2 do " << n << " ne postoji ni jedan savrsen broj " << endl;
	}
}
int biggestDivisor(int ZadnjiSavrsen) {
	if (ZadnjiSavrsen == 0) {
		return 0;
	}
	int najveci = 0;
	for (int i = 1; i < ZadnjiSavrsen; i++)
	{
		if (ZadnjiSavrsen % i == 0) {
			najveci = i;
		}
	}
	return najveci;

}
void main() {
	int n;
	int zadnjiSavrsen;
	cout << "Unesite n: ";
	cin >> n;

	while (n <= 0 || n > 10000)
	{
		cout << "Broj mora biti veci od n manji od 10 000: ";
		cin >> n;
	}

	listPerfectNumbers(n, zadnjiSavrsen);

	if (biggestDivisor(zadnjiSavrsen) != 0) {
		cout << "Najveci djelilac posljednjeg savrsenog broja u nizu je: " << biggestDivisor(zadnjiSavrsen) << endl;
	}

	system("pause");
}
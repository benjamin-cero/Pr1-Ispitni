#include <iostream>
using namespace std;


/*Napisati program koji omogućuje korisniku da unese dimenzije matrice M1. 
Zbog olakšanja rješenja zadatka za drugu matricu omogućiti samo unos redova, 
te podrazumijevati da ima isti broj kolona kao prva matrica M1. 
Popuniti matrice M1 i M2 slučajnim vrijednostima u opsegu [1-20] koristeći liniju koda:
rand() % 20 + 1;
Napisati funkciju: vstack [funkcija koja prima kao ulazne parametre dvije matrice 
M1 i M2 a vraća novu matricu M3 koja se formira vertikalnim slaganjem matrica M1 i M2]

Neka je M1:
1 2 3
4 5 6
7 8 9

Neka je M2:
4 10 5
1 1 2

Rezultujuća matrica M3 treba izgledati ovako:
1 2 3
4 5 6
7 8 9
4 10 5
1 1 2
*/


int** vstack(int** M1, int rows1, int cols, int** M2, int rows2) {
    int totalRows = rows1 + rows2;
    int** M3 = new int* [totalRows];

    for (int i = 0; i < totalRows; ++i) {
        M3[i] = new int[cols];
    }

    for (int i = 0; i < rows1; i++)
    {
        for (int j = 0; j < cols; ++j) {
            M3[i][j] = M1[i][j];
        }
    }
    for (int i = 0; i < rows2; ++i) {
        for (int j = 0; j < cols; ++j) {
            M3[rows1 + i][j] = M2[i][j];
        }
    }
    return M3;
}
void main() {
    srand(time(NULL));
    int rows1, cols, rows2;

    cout << "Unesite broj redova i kolona za matricu M1: ";
    cin >> rows1 >> cols;

    int** M1 = new int* [rows1];
    for (int i = 0; i < rows1; ++i) {
        M1[i] = new int[cols];
    }
    for (int i = 0; i < rows1; i++)
    {
        for (int j = 0; j < cols; ++j) {
            M1[i][j] = rand() % 20 + 1;
        }
    }
    cout << "Unesite broj redova za matricu M2: ";
    cin >> rows2;

    int** M2 = new int* [rows2];
    for (int i = 0; i < rows2; ++i) {
        M2[i] = new int[cols];
    }
    for (int i = 0; i < rows2; i++)
    {
        for (int j = 0; j < cols; ++j) {
            M2[i][j] = rand() % 20 + 1;;
        }
    }
    int** M3;
    M3 = vstack(M1, rows1, cols, M2, rows2);

    cout << "\nMatrica M1:\n";
    for (int i = 0; i < rows1; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << M1[i][j] << " ";
        }
        cout << endl;
    }

    cout << "\nMatrica M2:\n";
    for (int i = 0; i < rows2; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << M2[i][j] << " ";
        }
        cout << endl;
    }

    cout << "\nRezultujuca matrica M3:\n";
    for (int i = 0; i < rows1 + rows2; ++i) {
        for (int j = 0; j < cols; ++j) {
            cout << M3[i][j] << " ";
        }
        cout << endl;
    }

    for (int i = 0; i < rows1; ++i) delete[] M1[i];
    delete[] M1;

    for (int i = 0; i < rows2; ++i) delete[] M2[i];
    delete[] M2;

    for (int i = 0; i < rows1 + rows2; ++i) delete[] M3[i];
    delete[] M3;

    system("pause");
}